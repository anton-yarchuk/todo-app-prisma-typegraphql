generator client {
  provider = "prisma-client-js"
  url      = env("DATABASE_URL")
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  lists        List[]
  todos        Todo[]
  Integrations Integration[]
}

model List {
  id        String    @id @default(uuid())
  title     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  todos     Todo[]
  owner     User?     @relation(fields: [ownerId], references: [id])
  ownerId   String?
}

model Todo {
  id               String            @id @default(uuid())
  title            String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  dueDate          DateTime?
  completedAt      DateTime?
  deletedAt        DateTime?
  owner            User              @relation(fields: [ownerId], references: [id])
  ownerId          String
  list             List?             @relation(fields: [listId], references: [id])
  listId           String?
  externalTodoRefs ExternalTodoRef[]
}

model Integration {
  id               String            @id @default(uuid())
  type             String // Todoist, Google Calendar, etc. see `IntegrationTypeEnum`
  createdAt        DateTime          @default(now())
  owner            User              @relation(fields: [ownerId], references: [id])
  ownerId          String
  externalTodoRefs ExternalTodoRef[]
  details          Json // results to JSONB field in PG
}

model ExternalTodoRef {
  externalTodoId String
  todoId         String
  todo           Todo        @relation(fields: [todoId], references: [id])
  createdAt      DateTime    @default(now())
  integration    Integration @relation(fields: [integrationId], references: [id])
  integrationId  String

  @@id([externalTodoId, todoId])
}
